name: Build and Push

on:
  workflow_call:
    inputs:
      env:
        description: 'which environment to deploy to'
        required: true
        type: string
      slackbot_image_tag:
        description: 'what to tag the image with'
        type: string
      image_tag:
        description: 'what to tag the image with'
        type: string
      ecr_repo:
        description: 'name of the ecr repo'
        required: true
        type: string
      aws_region:
        description: 'region of the ecr repo'
        type: string
        required: true
    secrets:
      ecr_role_to_assume:
        description: 'ecr role to assume in aws'
        required: true
    # Map the workflow outputs to job outputs
    outputs:
      REGISTRY:
        description: "The ecr registry"
        value: ${{ jobs.build-and-push.outputs.registry }}

jobs:
  build-and-push:
    name: Build container, push to ECR and deploy to the cluster
    environment: ${{ inputs.env }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    outputs:
      SLACKBOT_IMAGE_TAG: ${{ steps.build-image.outputs.SLACKBOT_IMAGE_TAG }}
      IMAGE_TAG: ${{ steps.build-image.outputs.IMAGE_TAG }}
      REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3.11.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: ${{ secrets.ecr_role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        id: login-ecr

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REPO: ${{ inputs.ecr_repo }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          SLACKBOT_IMAGE_TAG: ${{ inputs.slackbot_image_tag }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REGISTRY/$ECR_REPO:$SLACKBOT_IMAGE_TAG -f slackbot/Dockerfile .
          docker push $REGISTRY/$ECR_REPO:$SLACKBOT_IMAGE_TAG

          docker build -t $REGISTRY/$ECR_REPO:$IMAGE_TAG .
          docker push $REGISTRY/$ECR_REPO:$IMAGE_TAG
